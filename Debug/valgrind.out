==00:00:00:00.000 4770== Memcheck, a memory error detector
==00:00:00:00.000 4770== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==00:00:00:00.000 4770== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==00:00:00:00.000 4770== Command: ./damas
==00:00:00:00.000 4770== Parent PID: 4190
==00:00:00:00.000 4770== 
==00:00:00:01.097 4770== Invalid write of size 4
==00:00:00:01.097 4770==    at 0x804A232: comerReinaIzAb (MovsTablero.c:371)
==00:00:00:01.097 4770==    by 0x804BA94: comerEnCascada (Arbol.c:247)
==00:00:00:01.097 4770==    by 0x804B77C: evaluarDama (Arbol.c:215)
==00:00:00:01.097 4770==    by 0x804BCCD: crearNivel (Arbol.c:275)
==00:00:00:01.097 4770==    by 0x804A2E4: jugar (Juego.c:30)
==00:00:00:01.097 4770==    by 0x8048767: main (main.c:42)
==00:00:00:01.097 4770==  Address 0x42122dc is 4 bytes before a block of size 448 alloc'd
==00:00:00:01.097 4770==    at 0x40299D8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==00:00:00:01.097 4770==    by 0x804BD00: crearNodo (Arbol.c:285)
==00:00:00:01.097 4770==    by 0x804B724: evaluarDama (Arbol.c:212)
==00:00:00:01.097 4770==    by 0x804BCCD: crearNivel (Arbol.c:275)
==00:00:00:01.097 4770==    by 0x804A2E4: jugar (Juego.c:30)
==00:00:00:01.097 4770==    by 0x8048767: main (main.c:42)
==00:00:00:01.097 4770== 
==00:00:00:01.098 4770== Invalid write of size 4
==00:00:00:01.098 4770==    at 0x804A232: comerReinaIzAb (MovsTablero.c:371)
==00:00:00:01.098 4770==    by 0x804BA94: comerEnCascada (Arbol.c:247)
==00:00:00:01.098 4770==    by 0x804B850: evaluarDama (Arbol.c:225)
==00:00:00:01.098 4770==    by 0x804BCCD: crearNivel (Arbol.c:275)
==00:00:00:01.098 4770==    by 0x804A2E4: jugar (Juego.c:30)
==00:00:00:01.098 4770==    by 0x8048767: main (main.c:42)
==00:00:00:01.098 4770==  Address 0x42124cc is 4 bytes before a block of size 448 alloc'd
==00:00:00:01.098 4770==    at 0x40299D8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==00:00:00:01.098 4770==    by 0x804BD00: crearNodo (Arbol.c:285)
==00:00:00:01.098 4770==    by 0x804B7F8: evaluarDama (Arbol.c:222)
==00:00:00:01.098 4770==    by 0x804BCCD: crearNivel (Arbol.c:275)
==00:00:00:01.098 4770==    by 0x804A2E4: jugar (Juego.c:30)
==00:00:00:01.098 4770==    by 0x8048767: main (main.c:42)
==00:00:00:01.098 4770== 
==00:00:00:01.098 4770== Invalid write of size 4
==00:00:00:01.098 4770==    at 0x804A34B: jugar (Juego.c:45)
==00:00:00:01.098 4770==    by 0x8048767: main (main.c:42)
==00:00:00:01.098 4770==  Address 0x1b1 is not stack'd, malloc'd or (recently) free'd
==00:00:00:01.098 4770== 
==00:00:00:01.098 4770== 
==00:00:00:01.098 4770== Process terminating with default action of signal 11 (SIGSEGV)
==00:00:00:01.098 4770==  Access not within mapped region at address 0x1B1
==00:00:00:01.098 4770==    at 0x804A34B: jugar (Juego.c:45)
==00:00:00:01.098 4770==    by 0x8048767: main (main.c:42)
==00:00:00:01.098 4770==  If you believe this happened as a result of a stack
==00:00:00:01.098 4770==  overflow in your program's main thread (unlikely but
==00:00:00:01.098 4770==  possible), you can try to increase the size of the
==00:00:00:01.098 4770==  main thread stack using the --main-stacksize= flag.
==00:00:00:01.098 4770==  The main thread stack size used in this run was 8388608.
==00:00:00:01.146 4770== 
==00:00:00:01.146 4770== FILE DESCRIPTORS: 4 open at exit.
==00:00:00:01.146 4770== Open file descriptor 3: /home/alejandro/workspace/damas/Debug/valgrind.out
==00:00:00:01.146 4770==    <inherited from parent>
==00:00:00:01.146 4770== 
==00:00:00:01.146 4770== Open file descriptor 2: /dev/pts/0
==00:00:00:01.146 4770==    <inherited from parent>
==00:00:00:01.146 4770== 
==00:00:00:01.146 4770== Open file descriptor 1: /dev/pts/0
==00:00:00:01.146 4770==    <inherited from parent>
==00:00:00:01.146 4770== 
==00:00:00:01.146 4770== Open file descriptor 0: /dev/pts/0
==00:00:00:01.146 4770==    <inherited from parent>
==00:00:00:01.146 4770== 
==00:00:00:01.146 4770== 
==00:00:00:01.146 4770== HEAP SUMMARY:
==00:00:00:01.146 4770==     in use at exit: 64,408 bytes in 144 blocks
==00:00:00:01.146 4770==   total heap usage: 144 allocs, 0 frees, 64,408 bytes allocated
==00:00:00:01.146 4770== 
==00:00:00:01.148 4770== 440 bytes in 1 blocks are still reachable in loss record 1 of 12
==00:00:00:01.148 4770==    at 0x40299D8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==00:00:00:01.148 4770==    by 0x804A2B2: jugar (Juego.c:28)
==00:00:00:01.148 4770==    by 0x8048767: main (main.c:42)
==00:00:00:01.148 4770== 
==00:00:00:01.148 4770== 448 bytes in 1 blocks are still reachable in loss record 2 of 12
==00:00:00:01.148 4770==    at 0x40299D8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==00:00:00:01.148 4770==    by 0x804BD00: crearNodo (Arbol.c:285)
==00:00:00:01.148 4770==    by 0x804B7F8: evaluarDama (Arbol.c:222)
==00:00:00:01.148 4770==    by 0x804BCCD: crearNivel (Arbol.c:275)
==00:00:00:01.148 4770==    by 0x804A2E4: jugar (Juego.c:30)
==00:00:00:01.148 4770==    by 0x8048767: main (main.c:42)
==00:00:00:01.148 4770== 
==00:00:00:01.148 4770== 448 bytes in 1 blocks are indirectly lost in loss record 3 of 12
==00:00:00:01.148 4770==    at 0x40299D8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==00:00:00:01.148 4770==    by 0x804BD00: crearNodo (Arbol.c:285)
==00:00:00:01.148 4770==    by 0x804AED9: evaluarFichaJug1 (Arbol.c:103)
==00:00:00:01.148 4770==    by 0x804BC80: crearNivel (Arbol.c:273)
==00:00:00:01.148 4770==    by 0x804A2E4: jugar (Juego.c:30)
==00:00:00:01.148 4770==    by 0x8048767: main (main.c:42)
==00:00:00:01.148 4770== 
==00:00:00:01.148 4770== 448 bytes in 1 blocks are indirectly lost in loss record 4 of 12
==00:00:00:01.148 4770==    at 0x40299D8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==00:00:00:01.148 4770==    by 0x804BD00: crearNodo (Arbol.c:285)
==00:00:00:01.148 4770==    by 0x804B7F8: evaluarDama (Arbol.c:222)
==00:00:00:01.148 4770==    by 0x804BCCD: crearNivel (Arbol.c:275)
==00:00:00:01.148 4770==    by 0x804A2E4: jugar (Juego.c:30)
==00:00:00:01.148 4770==    by 0x8048767: main (main.c:42)
==00:00:00:01.148 4770== 
==00:00:00:01.148 4770== 448 bytes in 1 blocks are definitely lost in loss record 5 of 12
==00:00:00:01.148 4770==    at 0x40299D8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==00:00:00:01.148 4770==    by 0x804BD00: crearNodo (Arbol.c:285)
==00:00:00:01.148 4770==    by 0x804B724: evaluarDama (Arbol.c:212)
==00:00:00:01.148 4770==    by 0x804BCCD: crearNivel (Arbol.c:275)
==00:00:00:01.148 4770==    by 0x804A2E4: jugar (Juego.c:30)
==00:00:00:01.148 4770==    by 0x8048767: main (main.c:42)
==00:00:00:01.148 4770== 
==00:00:00:01.148 4770== 4,928 (448 direct, 4,480 indirect) bytes in 1 blocks are definitely lost in loss record 6 of 12
==00:00:00:01.148 4770==    at 0x40299D8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==00:00:00:01.148 4770==    by 0x804BD00: crearNodo (Arbol.c:285)
==00:00:00:01.148 4770==    by 0x804AE1D: evaluarFichaJug1 (Arbol.c:94)
==00:00:00:01.148 4770==    by 0x804BC80: crearNivel (Arbol.c:273)
==00:00:00:01.148 4770==    by 0x804A2E4: jugar (Juego.c:30)
==00:00:00:01.148 4770==    by 0x8048767: main (main.c:42)
==00:00:00:01.148 4770== 
==00:00:00:01.148 4770== 10,752 bytes in 24 blocks are indirectly lost in loss record 7 of 12
==00:00:00:01.148 4770==    at 0x40299D8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==00:00:00:01.148 4770==    by 0x804BD00: crearNodo (Arbol.c:285)
==00:00:00:01.148 4770==    by 0x804A93B: evaluarFichaJug2 (Arbol.c:28)
==00:00:00:01.148 4770==    by 0x804BBE4: crearNivel (Arbol.c:267)
==00:00:00:01.148 4770==    by 0x804A2E4: jugar (Juego.c:30)
==00:00:00:01.148 4770==    by 0x80487FA: main (main.c:53)
==00:00:00:01.148 4770== 
==00:00:00:01.148 4770== 13,888 bytes in 31 blocks are indirectly lost in loss record 8 of 12
==00:00:00:01.148 4770==    at 0x40299D8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==00:00:00:01.148 4770==    by 0x804BD00: crearNodo (Arbol.c:285)
==00:00:00:01.148 4770==    by 0x804A86D: evaluarFichaJug2 (Arbol.c:17)
==00:00:00:01.148 4770==    by 0x804BBE4: crearNivel (Arbol.c:267)
==00:00:00:01.148 4770==    by 0x804A2E4: jugar (Juego.c:30)
==00:00:00:01.148 4770==    by 0x80487FA: main (main.c:53)
==00:00:00:01.148 4770== 
==00:00:00:01.148 4770== 14,784 bytes in 33 blocks are indirectly lost in loss record 9 of 12
==00:00:00:01.148 4770==    at 0x40299D8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==00:00:00:01.148 4770==    by 0x804BD00: crearNodo (Arbol.c:285)
==00:00:00:01.148 4770==    by 0x804AD4F: evaluarFichaJug1 (Arbol.c:83)
==00:00:00:01.148 4770==    by 0x804BC80: crearNivel (Arbol.c:273)
==00:00:00:01.148 4770==    by 0x804A2E4: jugar (Juego.c:30)
==00:00:00:01.148 4770==    by 0x8048767: main (main.c:42)
==00:00:00:01.148 4770== 
==00:00:00:01.148 4770== 17,024 bytes in 38 blocks are indirectly lost in loss record 10 of 12
==00:00:00:01.148 4770==    at 0x40299D8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==00:00:00:01.148 4770==    by 0x804BD00: crearNodo (Arbol.c:285)
==00:00:00:01.148 4770==    by 0x804AE1D: evaluarFichaJug1 (Arbol.c:94)
==00:00:00:01.148 4770==    by 0x804BC80: crearNivel (Arbol.c:273)
==00:00:00:01.148 4770==    by 0x804A2E4: jugar (Juego.c:30)
==00:00:00:01.148 4770==    by 0x8048767: main (main.c:42)
==00:00:00:01.148 4770== 
==00:00:00:01.148 4770== 27,280 (2,640 direct, 24,640 indirect) bytes in 6 blocks are definitely lost in loss record 11 of 12
==00:00:00:01.148 4770==    at 0x40299D8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==00:00:00:01.149 4770==    by 0x804A2B2: jugar (Juego.c:28)
==00:00:00:01.149 4770==    by 0x80487FA: main (main.c:53)
==00:00:00:01.149 4770== 
==00:00:00:01.149 4770== 30,864 (2,640 direct, 28,224 indirect) bytes in 6 blocks are definitely lost in loss record 12 of 12
==00:00:00:01.149 4770==    at 0x40299D8: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==00:00:00:01.149 4770==    by 0x804A2B2: jugar (Juego.c:28)
==00:00:00:01.149 4770==    by 0x8048767: main (main.c:42)
==00:00:00:01.149 4770== 
==00:00:00:01.149 4770== LEAK SUMMARY:
==00:00:00:01.149 4770==    definitely lost: 6,176 bytes in 14 blocks
==00:00:00:01.149 4770==    indirectly lost: 57,344 bytes in 128 blocks
==00:00:00:01.149 4770==      possibly lost: 0 bytes in 0 blocks
==00:00:00:01.149 4770==    still reachable: 888 bytes in 2 blocks
==00:00:00:01.149 4770==         suppressed: 0 bytes in 0 blocks
==00:00:00:01.149 4770== 
==00:00:00:01.149 4770== For counts of detected and suppressed errors, rerun with: -v
==00:00:00:01.149 4770== ERROR SUMMARY: 7 errors from 7 contexts (suppressed: 0 from 0)
